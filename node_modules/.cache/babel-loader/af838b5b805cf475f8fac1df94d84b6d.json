{"ast":null,"code":"import _slicedToArray from \"/media/filipe/Disco Local/repos/themovie/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/media/filipe/Disco Local/repos/themovie/web/src/pages/PopularMovies/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport token from '../../config/token';\nimport { Container, Card, Cards, Header, Pagination, Span } from './styles';\nexport default function PopularMovies() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        popularMovies = _useState2[0],\n        setPopularMovies = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  useEffect(() => {\n    async function loadPopularMovies() {\n      const pageNumber = page > 0 ? page : 1;\n      const response = await api.post(`/movies/popular`, {\n        page: pageNumber\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      if (response.data) return setPopularMovies(response.data.results);\n      return;\n    }\n\n    ;\n    loadPopularMovies();\n  }, []);\n\n  async function handleChangePage(page) {\n    if (page === 0) return;\n    const response = await api.post(`/movies/popular`, {\n      page\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n    setPage(page);\n    if (response.data) return setPopularMovies(response.data.results);\n    return;\n  }\n\n  ;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"POPULAR MOVIES\"), React.createElement(Link, {\n    to: \"/movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"SEARCH PAGE\")), React.createElement(Pagination, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Span, {\n    onClick: () => handleChangePage(page - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Back \"), React.createElement(Span, {\n    onClick: () => handleChangePage(page + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" Next \")), React.createElement(Cards, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, popularMovies.map(movie => React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, movie.title), React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/media/filipe/Disco Local/repos/themovie/web/src/pages/PopularMovies/index.js"],"names":["React","useState","useEffect","Link","api","token","Container","Card","Cards","Header","Pagination","Span","PopularMovies","popularMovies","setPopularMovies","page","setPage","loadPopularMovies","pageNumber","response","post","headers","Authorization","data","results","handleChangePage","map","movie","title","poster_path"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport token from '../../config/token';\n\nimport { Container, Card, Cards, Header, Pagination, Span } from './styles';\n\nexport default function PopularMovies() {\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    async function loadPopularMovies() {\n      const pageNumber = page > 0 ? page : 1;\n\n      const response = await api.post(`/movies/popular`, { page: pageNumber }, {\n        headers: {\n          Authorization: token\n        }\n      });\n\n      if(response.data) return setPopularMovies(response.data.results);\n\n      return;\n    };\n\n    loadPopularMovies();\n  }, [])\n\n  async function handleChangePage(page) {\n    if (page === 0) return;\n\n    const response = await api.post(`/movies/popular`, { page }, {\n      headers: {\n        Authorization: token\n      },\n    });\n\n    setPage(page);\n\n    if(response.data) return setPopularMovies(response.data.results);\n\n    return;\n  };\n \n\n  return (\n    <Container>\n      <Header>\n        <p>POPULAR MOVIES</p>\n        <Link to=\"/movie\">SEARCH PAGE</Link>\n      </Header>\n\n      <Pagination>\n        <Span onClick={() => handleChangePage(page - 1)}> Back </Span>\n        <Span onClick={() => handleChangePage(page + 1)}> Next </Span>\n      </Pagination>\n\n      <Cards>\n        {popularMovies.map(movie => (\n          <Card>\n            <p>{movie.title}</p>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} \n              alt=\"\" \n              />\n          </Card>\n        ))}\n      </Cards>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}